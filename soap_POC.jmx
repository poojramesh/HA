<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Seating.allocatedSeatingQueries" enabled="true">
      <stringProp name="TestPlan.comments">Seating.allocatedSeatingQueries</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml,application/json;q=0.9,*/*;q=0.8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Charset</stringProp>
            <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip,deflate</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HOST_URL" elementType="Argument">
            <stringProp name="Argument.name">HOST_URL</stringProp>
            <stringProp name="Argument.value">${__P(HOST_URL,localhost)}</stringProp>
            <stringProp name="Argument.desc">Host URL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">${__P(PORT,8181)}</stringProp>
            <stringProp name="Argument.desc">PORT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="POC_SOAP_CXF" enabled="true">
        <stringProp name="TestPlan.comments">POC_SOAP_CXF</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1494567343000</longProp>
        <longProp name="ThreadGroup.end_time">1494567343000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POC_SOAP_CXF" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.quickstarts.fabric8.io/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;soap:sayHi&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;arg0&gt;Pratap&lt;/arg0&gt;&#xd;
      &lt;/soap:sayHi&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_URL}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cxf/HelloWorld</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">0</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GetSeatSelectorAvailabilityModel_Positive" enabled="false">
        <stringProp name="TestPlan.comments">GetSeatSelectorAvailabilityModel_Positive</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1494567343000</longProp>
        <longProp name="ThreadGroup.end_time">1494567343000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSeatSelectorAvailabilityModel_Positive" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:eas=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.Contracts.QueryContracts.Criteria&quot; xmlns:eas1=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.Contracts.QueryContracts.SeatSelector&quot; xmlns:eas2=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.SharedContracts&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:GetSeatSelectorAvailabilityModel&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:criteria&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:CabinBagPolicy&gt;Standard&lt;/eas:CabinBagPolicy&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Channel&gt;Unknown&lt;/eas:Channel&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Culture&gt;en-GB&lt;/eas:Culture&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:CurrencyInfo&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:BaseCode&gt;GBP&lt;/eas1:BaseCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:CreditCardMarkupRatio&gt;0&lt;/eas1:CreditCardMarkupRatio&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DecimalPlaces&gt;2&lt;/eas1:DecimalPlaces&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DisplayCode&gt;GBP&lt;/eas1:DisplayCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:ExchangeRate&gt;1&lt;/eas1:ExchangeRate&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:Symbol&gt;£&lt;/eas1:Symbol&gt;&#xd;
            &lt;/eas:CurrencyInfo&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:FareType&gt;Standard&lt;/eas:FareType&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Flights&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;eas:AvailabilityFlight&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:AircraftTypeId&gt;&#xd;
                     &lt;!--Optional:--&gt;&#xd;
                     &lt;eas2:_id&gt;6&lt;/eas2:_id&gt;&#xd;
                  &lt;/eas:AircraftTypeId&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:ArrivalAirportCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas:ArrivalAirportCode&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:DepartureAirportCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas:DepartureAirportCode&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:DisplaySequence&gt;1&lt;/eas:DisplaySequence&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:Id&gt;5469156&lt;/eas:Id&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
           &lt;!--       &lt;eas:LocalDepartureDate&gt;?&lt;/eas:LocalDepartureDate&gt;&#xd;
 --&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:SeatingEnabled&gt;true&lt;/eas:SeatingEnabled&gt;&#xd;
               &lt;/eas:AvailabilityFlight&gt;&#xd;
            &lt;/eas:Flights&gt;&#xd;
         &lt;/tem:criteria&gt;&#xd;
      &lt;/tem:GetSeatSelectorAvailabilityModel&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_URL}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/easyJet.AllocatedSeating.Queries/AllocatedSeatingQueriesService.svc</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">666.66</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GetPriceBandsForFlight_Negative" enabled="false">
        <stringProp name="TestPlan.comments">GetPriceBandsForFlight_Negative</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1494567343000</longProp>
        <longProp name="ThreadGroup.end_time">1494567343000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPriceBandsForFlight_Negative" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:eas=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.Contracts.QueryContracts.Criteria&quot; xmlns:eas1=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.SharedContracts&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:GetPriceBandsForFlight&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:criteria&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:ArrivalAirportCode&gt;BCN&lt;/eas:ArrivalAirportCode&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Channel&gt;WebBookingFunnel&lt;/eas:Channel&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:CurrencyData&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:BaseCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas1:BaseCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:CreditCardMarkupRatio&gt;0&lt;/eas1:CreditCardMarkupRatio&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DecimalPlaces&gt;2&lt;/eas1:DecimalPlaces&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DisplayCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas1:DisplayCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:ExchangeRate&gt;1&lt;/eas1:ExchangeRate&gt;&#xd;
            &lt;/eas:CurrencyData&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:DepartureAirportCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas:DepartureAirportCode&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:FareType&gt;Standard&lt;/eas:FareType&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:FlightId&gt;8469156&lt;/eas:FlightId&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:LocalDepartureDate&gt;?&lt;/eas:LocalDepartureDate&gt;&#xd;
         &lt;/tem:criteria&gt;&#xd;
      &lt;/tem:GetPriceBandsForFlight&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_URL}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/easyJet.AllocatedSeating.Queries/AllocatedSeatingQueriesService.svc</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="52469">500</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">20000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GetSeatSelectorAvailabilityModel_Negative" enabled="false">
        <stringProp name="TestPlan.comments">GetSeatSelectorAvailabilityModel_Negative</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1494567343000</longProp>
        <longProp name="ThreadGroup.end_time">1494567343000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSeatSelectorAvailabilityModel_Negative" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:eas=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.Contracts.QueryContracts.Criteria&quot; xmlns:eas1=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.Contracts.QueryContracts.SeatSelector&quot; xmlns:eas2=&quot;http://schemas.datacontract.org/2004/07/easyJet.Flights.Seating.SharedContracts&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:GetSeatSelectorAvailabilityModel&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:criteria&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:CabinBagPolicy&gt;Standard&lt;/eas:CabinBagPolicy&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Channel&gt;Unknown&lt;/eas:Channel&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Culture&gt;en-GB&lt;/eas:Culture&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:CurrencyInfo&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:BaseCode&gt;GBP&lt;/eas1:BaseCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:CreditCardMarkupRatio&gt;0&lt;/eas1:CreditCardMarkupRatio&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DecimalPlaces&gt;2&lt;/eas1:DecimalPlaces&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:DisplayCode&gt;GBP&lt;/eas1:DisplayCode&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:ExchangeRate&gt;1&lt;/eas1:ExchangeRate&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;eas1:Symbol&gt;£&lt;/eas1:Symbol&gt;&#xd;
            &lt;/eas:CurrencyInfo&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:FareType&gt;Standard&lt;/eas:FareType&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;eas:Flights&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;eas:AvailabilityFlight&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:AircraftTypeId&gt;&#xd;
                     &lt;!--Optional:--&gt;&#xd;
                     &lt;eas2:_id&gt;6&lt;/eas2:_id&gt;&#xd;
                  &lt;/eas:AircraftTypeId&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:ArrivalAirportCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas:ArrivalAirportCode&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:DepartureAirportCode&gt;${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&lt;/eas:DepartureAirportCode&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:DisplaySequence&gt;1&lt;/eas:DisplaySequence&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:Id&gt;7469156&lt;/eas:Id&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
           &lt;!--       &lt;eas:LocalDepartureDate&gt;?&lt;/eas:LocalDepartureDate&gt;&#xd;
 --&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;eas:SeatingEnabled&gt;true&lt;/eas:SeatingEnabled&gt;&#xd;
               &lt;/eas:AvailabilityFlight&gt;&#xd;
            &lt;/eas:Flights&gt;&#xd;
         &lt;/tem:criteria&gt;&#xd;
      &lt;/tem:GetSeatSelectorAvailabilityModel&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_URL}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/easyJet.AllocatedSeating.Queries/AllocatedSeatingQueriesService.svc</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="52469">500</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">20000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD.jtl</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/data01/opt/rh/apache-jmeter-3.0/SaSQD_PM.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-1328149293">
            <stringProp name="-16227897">172.26.168.37</stringProp>
            <stringProp name="1745813">9020</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="666103682">
            <stringProp name="-16227897">172.26.168.37</stringProp>
            <stringProp name="1745813">9020</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
